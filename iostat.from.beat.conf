filter {

if [taskId] == "Iostat-Beat" {

    ruby {
        code => "event.set('message',event.get('message').split(/\n/))"
    }
    split {
        field => "message"
    }
    if [message] =~ "^[0-9][0-9]\/[0-9][0-9]" {
        grok {
            patterns_dir => "./patterns"
            match => { "message" => "%{GREEDYDATA:logday}" }
        }
        aggregate {
          task_id => "%{taskId}"
          code => "map['logday'] = event.get('logday')"
        }
        drop { }
    }
    if [message] =~ "^avg-cpu:" {
	    drop { }
	}
    if [message] =~ "^md-" {
	    drop { }
	}
    if [message] =~ "^sda[1-9]." {
	    drop { }
	}
    if [message] =~ "^sdb[1-9]." {
	    drop { }
	}
    if [message] =~ "^sdm" {
	    drop { }
	}
    if [message] =~ "^ " {
	    drop { }
	}
    if [message] =~ "^Device:" {
	    drop { }
	}
    csv {
        separator => " "
        #columns =>  ["device","rrqm_s","wrqm_s","r_s","w_s","rsec_s","wsec_s","avgrq_sz","avgqu_sz","await","r_await","w_await","svctm","util"]
        columns =>  ["device","rrqm_s","wrqm_s","r_s","w_s","rsec_s","wsec_s","avgrq_sz","avgqu_sz","await","r_await","w_await","svctm","util"]
    }
    mutate {
      convert => { "rrqm_s" => "float" }
      convert => { "wrqm_s" => "float" }
      convert => { "r_s" => "float" }
      convert => { "w_s" => "float" }
      convert => { "rsec_s" => "float" }
      convert => { "wsec_s" => "float" }
      convert => { "avgrq_sz" => "float"}
      convert => { "avgqu_sz" => "float"} 
      convert => { "await" => "float" }
      convert => { "r_await" => "float" }
      convert => { "w_await" => "float" }
      convert => { "svctm" => "float" }
      convert => { "util" => "float" }
      remove_field => [ "message" ]
      remove_field => [ "source" ]
    }
    aggregate {
        task_id => "%{taskId}"
        code =>  "event.set('logday', map['logday'])"
        map_action => "update"
    }
	
    mutate {
        add_field => { "timestamp" => "%{logday} +0900" }
    }

    date {
        #match => [ "timestamp","MM/dd/yy HH:mm:ss a Z" ]
        match => [ "timestamp","MM/dd/yy K:mm:ss a Z" ]
        target => "@timestamp"
    }
  }
}
