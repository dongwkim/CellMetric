input{
### ZDLRA DB Metric  ####
  jdbc {
    jdbc_driver_library => "/elastic/logstash/oracle/ojdbc5.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@10.179.113.41:1521/seoul"
    jdbc_user => "rasys"
    jdbc_password => "welcome1"
    schedule => "*/10 * * * *"
    #statement_filepath => "/instantclient_11_2/sql"
    statement => "select 'TOTAL' as db,name,used_space,freespace from ra_storage_location union select db_unique_name,storage_location,used_space,0 from ra_Database_storage_usage"
    add_field => {
      "radb" => "seoul"
      "metric" => "storage"
      "taskId"=> "RaMetric"
    }
  }
  jdbc {
    jdbc_driver_library => "/elastic/logstash/oracle/ojdbc5.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@10.179.113.41:1521/seoul"
    jdbc_user => "rasys"
    jdbc_password => "welcome1"
    schedule => "* * * * *"
    #statement_filepath => "/instantclient_11_2/sql"
    #statement => "select db_unique_name,task_type,state from ra_Task where archived='N'"
    statement => "select db_unique_name,task_type,state,completion_time from ra_Task where creation_time>=sysdate-1/24/60 or archived='N'"
    add_field => {
      "radb" => "seoul"
      "metric" => "task"
      "taskId"=> "RaMetric"
    }
  }
#### Protected Window ####
  jdbc {
    jdbc_driver_library => "/elastic/logstash/oracle/ojdbc5.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@10.179.113.41:1521/seoul"
    jdbc_user => "rasys"
    jdbc_password => "welcome1"
    schedule => "* * * * *"
#    statement_filepath => "/instantclient_11_2/sql"
    statement => " select db_unique_name, extract(hour FROM unprotected_window) ||' Hr ' ||extract(minute FROM unprotected_window) ||' Min ' ||extract(second FROM unprotected_window) || ' Sec' unprotected_window from ra_database"
    add_field => {
      "radb" => "seoul"
      "metric" => "rpo"
      "taskId"=> "RaMetric"
    }
  }
#### Last Backup ###
  jdbc {
    jdbc_driver_library => "/elastic/logstash/oracle/ojdbc5.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@10.179.113.41:1521/seoul"
    jdbc_user => "rasys"
    jdbc_password => "welcome1"
    schedule => "*/10 * * * *"
#    statement_filepath => "/instantclient_11_2/sql"
    statement => "SELECT (select rd.db_unique_name from ra_database rd where rd.db_key=jd.db_key) DB_UNIQUE_NAME , INPUT_TYPE , TO_CHAR(start_time,'yyyy-mm-dd hh24:mi:ss') START_TIME , TO_CHAR(end_time,'yyyy-mm-dd hh24:mi:ss') END_TIME , TIME_TAKEN_DISPLAY TIME_TAKEN, TRUNC(INPUT_BYTES /1024/1024) INPUT_MB, TRUNC(OUTPUT_BYTES/1024/1024) OUTPUT_MB, STATUS FROM RC_RMAN_BACKUP_JOB_DETAILS jd WHERE INPUT_TYPE IN ('DB INCR','DB FULL') AND (db_name,start_time) IN (SELECT db_name, MAX(start_time) start_time FROM RC_RMAN_BACKUP_JOB_DETAILS WHERE INPUT_TYPE IN ('DB INCR','DB FULL') GROUP BY db_name) ORDER BY start_time, command_id"
    add_field => {
      "radb" => "seoul"
      "metric" => "lastbackup"
      "taskId"=> "RaMetric"
    }
  }
#### Incident #####
  jdbc {
    jdbc_driver_library => "/elastic/logstash/oracle/ojdbc5.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@10.179.113.41:1521/seoul"
    jdbc_user => "rasys"
    jdbc_password => "welcome1"
    schedule => "* * * * *"
    statement => "select incident_id,severity,component,db_unique_name,error_text,first_seen,last_seen,status from ra_incident_log where status not in ('FIXED','RESET') and severity <>'INTERVAL'"
    add_field => {
      "radb" => "seoul"
      "metric" => "incident"
      "taskId"=> "RaMetric"
    }
  }
}

